newX1 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData1)
quantModelPreds1_1 <- newX1 %*% quantModelCoefs[,,l,L]
newData2 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) >= 2086]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[1], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[1], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[1], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[1], length(newTemps)))
newX2 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData2)
quantModelPreds2_1 <- newX2 %*% quantModelCoefs[,,l,L]
plot(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) <= 1934),
xlim = c(min(TREFHT), max(TREFHT)),
ylim = c(min(DEWP), max(DEWP)), col = 'lightblue',
main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)))
lines(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) >= 2086),
type = "p", col = 'pink')
lines(newTemps, quantModelPreds1_1[,2], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,4], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,6], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,2], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,4], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,6], col = 'red', lty = 'dashed', lwd = 2)
abline(a=0, b=1, lwd = 3, col = 'gray')
loc_JJA_df$X_c.1
plot(loc_JJA_df$X_c.1)
plot(loc_JJA_df$X_c.1, type='l')
plot(loc_JJA_df$X_c.1[1:(31+31+30)], type='l')
30+31+31
(30+31+31)/2
newTemps <- seq(min(loc_JJA_df$TREFHT), max(loc_JJA_df$TREFHT), len = numNewTemps)
newData1 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) <= 1934]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX1 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData1)
quantModelPreds1_1 <- newX1 %*% quantModelCoefs[,,l,L]
newData2 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) >= 2086]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX2 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData2)
quantModelPreds2_1 <- newX2 %*% quantModelCoefs[,,l,L]
plot(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) <= 1934),
xlim = c(min(TREFHT), max(TREFHT)),
ylim = c(min(DEWP), max(DEWP)), col = 'lightblue',
main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)))
lines(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) >= 2086),
type = "p", col = 'pink')
lines(newTemps, quantModelPreds1_1[,2], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,4], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,6], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,2], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,4], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,6], col = 'red', lty = 'dashed', lwd = 2)
abline(a=0, b=1, lwd = 3, col = 'gray')
rm(list=ls())
library(quantreg)
library(splines)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(fields)
load('/Users/apoppick/Dropbox (Carleton College)/Research/Temp_DewPt_scratch/LENS/Results/prelim_EUSA_analysis.RData')
lon_convert_subs <- lon_convert_subs[lon_convert_subs >= -100]
pdf("/Users/apoppick/Desktop/lookatsomefits2.pdf")
for(l in seq(1, 28, by = 5)){
for(L in seq(1, 28, by = 5)){
loc_JJA_df <- data.frame(DEWP = DEWP_EUSA_JJA[l,L,,],
TREFHT = TREFHT_EUSA_JJA[l,L,,], date = GMT_JJA$date)
loc_JJA_df <- merge(loc_JJA_df, GMT_JJA, by = "date")
loc_JJA_df <- loc_JJA_df %>%
gather(key, value, -date, -GMTSmoother, -(83:86)) %>%
extract(key, c("var", "run"), "(.+)\\.(.+)") %>%
spread(var, value)
newTemps <- seq(min(loc_JJA_df$TREFHT), max(loc_JJA_df$TREFHT), len = numNewTemps)
newData1 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) <= 1934]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX1 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData1)
quantModelPreds1_1 <- newX1 %*% quantModelCoefs[,,l,L]
newData2 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) >= 2086]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX2 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData2)
quantModelPreds2_1 <- newX2 %*% quantModelCoefs[,,l,L]
plot(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) <= 1934),
xlim = c(min(TREFHT), max(TREFHT)),
ylim = c(min(DEWP), max(DEWP)), col = 'lightblue',
main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)))
# contour(kde2d(loc_JJA_df$TREFHT[year(loc_JJA_df$date) <= 1934],
#               loc_JJA_df$DEWP[year(loc_JJA_df$date) <= 1934]), labels = "", method = "simple",
#         xlab = "TREFHT", ylab = "DEWP", xlim = c(min(loc_JJA_df$TREFHT), max(loc_JJA_df$TREFHT)),
#         ylim = c(min(loc_JJA_df$DEWP), max(loc_JJA_df$DEWP)), col = 'lightblue',
#         main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)), nlevels = 10)
#
# contour(kde2d(loc_JJA_df$TREFHT[year(loc_JJA_df$date) >= 2086],
#               loc_JJA_df$DEWP[year(loc_JJA_df$date) >= 2086]), labels = "", method = "simple",
#         xlab = "TREFHT", ylab = "DEWP", xlim = c(min(loc_JJA_df$TREFHT), max(loc_JJA_df$TREFHT)),
#         ylim = c(min(loc_JJA_df$DEWP), max(loc_JJA_df$DEWP)), col = 'pink',
#         main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)), add = TRUE)
lines(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) >= 2086),
type = "p", col = 'pink')
lines(newTemps, quantModelPreds1_1[,2], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,4], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,6], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,2], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,4], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,6], col = 'red', lty = 'dashed', lwd = 2)
abline(a=0, b=1, lwd = 3, col = 'gray')
}
}
latlon_select <- expand.grid(seq(1, 28, by = 5), seq(1, 28, by = 5))
latlon_select <- latlon_select[order(latlon_select[,1]),]
image(x = lon_convert_subs, y = lat_subs, z = matrix(0, nLon, nLat),
axes = F, xlab = "", ylab = "", zlim = c(-1, 1), col = two.colors(start = "red",
end = "blue",
middle = "white"))
map("world", add=T,fill=FALSE, col="black")
text(x = lon_convert_subs[latlon_select[,1]], y = lat_subs[latlon_select[,2]], labels = 1:36)
dev.off()
l=1
L=6
seq(1, 28, by = 5)
loc_JJA_df <- data.frame(DEWP = DEWP_EUSA_JJA[l,L,,],
TREFHT = TREFHT_EUSA_JJA[l,L,,], date = GMT_JJA$date)
loc_JJA_df <- merge(loc_JJA_df, GMT_JJA, by = "date")
loc_JJA_df <- loc_JJA_df %>%
gather(key, value, -date, -GMTSmoother, -(83:86)) %>%
extract(key, c("var", "run"), "(.+)\\.(.+)") %>%
spread(var, value)
newTemps <- seq(min(loc_JJA_df$TREFHT), max(loc_JJA_df$TREFHT), len = numNewTemps)
newData1 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) <= 1934]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX1 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData1)
quantModelPreds1_1 <- newX1 %*% quantModelCoefs[,,l,L]
newData2 <- data.frame(TREFHT = newTemps,
GMTSmoother = rep(mean(loc_JJA_df$GMTSmoother[year(loc_JJA_df$date) >= 2086]),
length(newTemps)),
X_c.1 = rep(loc_JJA_df$X_c.1[46], length(newTemps)),
X_c.2 = rep(loc_JJA_df$X_c.2[46], length(newTemps)),
X_s.1 = rep(loc_JJA_df$X_s.1[46], length(newTemps)),
X_s.2 = rep(loc_JJA_df$X_s.2[46], length(newTemps)))
newX2 <- model.matrix(~ predict(ns(loc_JJA_df$TREFHT, df = 6), newx = TREFHT)*GMTSmoother +
(X_c.1 + X_c.2 + X_s.1 + X_s.2), data = newData2)
quantModelPreds2_1 <- newX2 %*% quantModelCoefs[,,l,L]
plot(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) <= 1934),
xlim = c(min(TREFHT), max(TREFHT)),
ylim = c(min(DEWP), max(DEWP)), col = 'lightblue',
main = paste("lat", round(lat_subs[L],2), "lon", round(lon_convert_subs[l],1)))
lines(DEWP ~ TREFHT, data = loc_JJA_df, cex = 0.1, subset = (year(date) >= 2086),
type = "p", col = 'pink')
lines(newTemps, quantModelPreds1_1[,2], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,4], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds1_1[,6], col = 'blue', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,2], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,4], col = 'red', lty = 'dashed', lwd = 2)
lines(newTemps, quantModelPreds2_1[,6], col = 'red', lty = 'dashed', lwd = 2)
abline(a=0, b=1, lwd = 3, col = 'gray')
(30+31+31)/2
(30+31+31)/2
46-30
8/3
4735 - 2744-1900
4402 - 2744
citi <- read.csv('/Users/apoppick/Downloads/CHK_9066_CURRENT_VIEW.csv', header = TRUE)
?layout
matrix(c(1,2,3,1,4,5), 2, 3)
matrix(c(1,2,3,1,4,5), 2, 3, byrow = TRUE)
?maps::map
>begidx <- 1
?AIC.rq
?quantreg::AIC.rq
quantreg::logLik.rq
?par
?which.min
?dopar
?doParallel::dopar
?foreach::dopar
?foreach::foreach
#nohup R CMD BATCH estimate_quantModelNoObs_noPI.R estimate_quantModelNoObs_noPI.Rout &
rm(list=ls())
library(MASS)
library(quantreg)
library(splines)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(foreach)
library(parallel)
library(doParallel)
library(MBC)
?registerDoParallel
?foreach
?dopar
?%dopar%
?mclapply
?foreach
??foreach
?registerDoParallel
?loess.control
source('~/.active-rstudio-document')
?tidyr::gather
X <- matrix(rnorm(4), 2, 2)
Y <- data.frame(X=X)
X
Y
rep(X, 2)
repmat <- function(X,m,n){
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X, mx, nx*n)), mx*m, nx*n, byrow = TRUE)
}
repmat(X, 2, 1)
data.frame(repmat(X, 2, 1))
data.frame(X = repmat(X, 2, 1))
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
library(tidyr)
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
?apply
colnames(local_df)
?lapply
?sort
?
extract
Sys.time()
?Sys.time()
?extract
?data.table
install.packages("data.table")
library(data.table)
?dcast
?melt
set.seed(45)
require(data.table)
DT <- data.table(
i_1 = c(1:5, NA),
i_2 = c(NA,6,7,8,9,10),
f_1 = factor(sample(c(letters[1:3], NA), 6, TRUE)),
f_2 = factor(c("z", "a", "x", "c", "x", "x"), ordered=TRUE),
c_1 = sample(c(letters[1:3], NA), 6, TRUE),
d_1 = as.Date(c(1:3,NA,4:5), origin="2013-09-01"),
d_2 = as.Date(6:1, origin="2012-01-01"))
# add a couple of list cols
DT[, l_1 := DT[, list(c=list(rep(i_1, sample(5,1)))), by = i_1]$c]
DT[, l_2 := DT[, list(c=list(rep(c_1, sample(5,1)))), by = i_1]$c]
DT
melt(DT, id=1:2, measure="f_1")
?extract
?strsplit
?tstrsplit
x = c("abcde", "ghij", "klmnopq")
strsplit(x, "", fixed=TRUE)
x = c("abcde", "ghij", "klmnopq")
strsplit(x, "", fixed=FALSE)
tstrsplit(x, "", fixed=TRUE, keep=c(1,3,5))
x
?dcast
?spread
require(data.table)
require(reshape2)
names(ChickWeight) <- tolower(names(ChickWeight))
DT <- melt(as.data.table(ChickWeight), id=2:4) # calls melt.data.table
DT
dcast.data.table(DT, time ~ variable, fun=mean)
dcast.data.table(DT, diet ~ variable, fun=mean)
dcast.data.table(DT, diet+chick ~ time, drop=FALSE)
dcast.data.table(DT, diet+chick ~ time, drop=TRUE)
dcast.data.table(DT, diet+chick ~ time, drop=FALSE, fill=0)
dcast.data.table(DT, diet+chick ~ time, drop=FALSE)
DT
?dcast.data.table
?lm
?first
first
install.packages("forcast")
install.packages("forecast")
library(forecast)
?aauto.arima
?auto.arima
285+32
47/(285+32)
(285+32+47/2)
180*2+60
150*2/7
212/(285+32)
prevalence <- 0.02
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
probPos
prevalence <- 0.02
fpr <- 0.02
fnr <- 0
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
probPos
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
probPos
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*2
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*5
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*10
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*100
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*100
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*100
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
prevalence <- 0.01
fpr <- 0.02
fnr <- 0.02
probPos <- (1-fnr) * prevalence + fpr * (1-prevalence)
N <- 1e3*1000
nIter <- 1e3
Y <- numeric(nIter)
for(k in 1:nIter){
p_hat <- rbinom(1, size = N, prob = probPos)/N
Y[k] <- (p_hat - fpr) / (1 - fnr - fpr)
}
hist(Y)
flour <- 120*4.5
water <- 236.59*1.5
water/flour
flour <- 1115+465/2
water <- 605 + 465/2
water/flour
605/1116
605/1115
850/1115
465/1115
850 + 56+19+28
850 + 56+19+28+465/2
850 + 56+19+465/2
850/0.9
850 + 56+19
56/0.06
19/0.02
465/0.5
605/0.65
19/0.02
flour <- 120*4.5
flour
120*4
236.59*2
100/355
270/555
377 / 773
flour <- 120*4.5
water <- 236.59*1.5
water+flour
=110/330
110/330
?quantreg::rq
92*30
92*36*40
x <- numeric(10)
x <- numeric(1)
x
x[1]
x[2]
fit.interaction = FALSE
numeric(1+fit.interaction)
numeric(1+fit.interaction*1)
fit.interaction = TRUE
numeric(1+fit.interaction)
grepl("X_c", c("X_c.1", "X_c.2", "hello")
)
library(lubridate)
y <- seq.Date(from = ymd("1990-1-1", "1990-12-31"), 1)
y <- seq.Date(from = ymd("1990-1-1"), to =  ymd("1990-12-31"), 1)
y
which(y == ymd("1990-6-1"))
which(y == ymd("1990-7-1"))
which(y == ymd("1990-8-1"))
12/(16*2)
2/1.5
(2/1.5)/3
(1.5)/3
12*12+5
12*12+5 - (3*12+11)
102/12
200 / (153*2)
O285+32)/2
(285+32)/2
1000/7
150*2
150*2*0.15
16/4
?image.plot
library(fields)
?image.plot
?color.scale
?color.scale
?image
8/3
8/1.5
